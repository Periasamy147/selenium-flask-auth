name: Flask Selenium CI

on:
  push:
    branches: [main, master]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      BASE_URL: http://127.0.0.1:5000
      FLASK_ENV: testing
      DATABASE_URL: postgresql://flask_user:flask_pass@localhost:5432/flask_db
      FLASK_SECRET_KEY: super_secret_key

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: flask_user
          POSTGRES_PASSWORD: flask_pass
          POSTGRES_DB: flask_db
        ports: ['5432:5432']
        options: >-
          --health-cmd "pg_isready -U flask_user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y chromium-browser chromium-chromedriver curl

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest selenium

      - name: Run Flask app in background
        run: |
          nohup python app.py > flask.log 2>&1 &
          echo "Waiting for Flask to start..."
          for i in {1..20}; do
            if curl -s $BASE_URL > /dev/null; then
              echo "✅ Flask started"
              break
            else
              echo "⏳ Waiting for Flask ($i/20)..."
              sleep 2
            fi
          done

      - name: Run Selenium Tests with retries
        env:
          PATH: /usr/lib/chromium-browser/:$PATH
        run: |
          MAX_RETRIES=2
          n=0
          until [ $n -ge $MAX_RETRIES ]
          do
            echo "Running Selenium tests, attempt $((n+1))..."
            pytest testing/login_register_test.py -v --disable-warnings && break
            n=$((n+1))
            echo "Retrying Selenium tests..."
            sleep 3
          done

      - name: Show Flask logs on failure
        if: failure()
        run: |
          echo "----- Flask Logs -----"
          cat flask.log
